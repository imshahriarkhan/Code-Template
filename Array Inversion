#include<bits/stdc++.h>
using namespace std ;

const int INF = 1e9 ;

long long inverse(vector<int> &v)
{
    int siz = v.size() , mid = siz/2 ;
    if(siz==1) return 0 ;
    vector<int> left , right ;
    for(int i = 0 ; i < mid ; ++i) left.push_back(v[i]) ;
    for(int i = mid ; i < siz ; ++i) right.push_back(v[i]) ;
    long long res = inverse(left) + inverse(right) ;
    left.push_back(INF) , right.push_back(INF) ;
    int pos[2] = {0} ;
    for(int i = 0 ; i < siz ; ++i)
    {
        if(left[pos[0]]<=right[pos[1]])
        {
            v[i] = left[pos[0]] ;
            ++pos[0] ;
        }
        else
        {
            v[i] = right[pos[1]] ;
            res += (mid-pos[0]) ;
            ++pos[1] ;
        }
    }
    return res ;
}

int main()
{
    int n ;
    scanf("%d",&n) ;
    vector<int> v ;
    for(int i = 0 ; i < n ; ++i)
    {
        int x ;
        scanf("%d",&x) ;
        v.push_back(x) ;
    }
    printf("%lld\n",inverse(v)) ;
    return 0 ;
}
