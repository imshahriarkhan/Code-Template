#include<bits/stdc++.h>
using namespace std ;

const int mx = 1e5 + 5 ;

int n , timer ;
vector<bool> vis ;
vector<int> adj[mx] , tin , low ;
vector<pair<int,int> > bridges ;

void dfs(int v , int p = -1)
{
    vis[v] = false ;
    tin[v] = low[v] = ++timer ;
    for(int to : adj[v])
    {
        if(to==p) continue ;
        if(vis[to])
        {
            low[v] = min(low[v],tin[to]) ;
        }
        else
        {
            dfs(to,v) ;
            low[v] = min(low[v],low[to]) ;
            if(low[to]>tin[v])
            {
                bridges.push_back({v,to}) ;
            }
        }
    }
}

void find_bridges()
{
    timer = 0 ;
    vis.assign(n + 1,false) ;
    tin.assign(n + 1,-1) ;
    low.assign(n + 1,-1) ;
    for(int i = 1 ; i <= n ; ++i)
    {
        if(!vis[i]) dfs(i) ;
    }
}
