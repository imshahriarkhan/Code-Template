//Problem Name: Jzzhu and Numbers
//Link: https://codeforces.com/contest/449/problem/D

#include<bits/stdc++.h>
using namespace std ;

const long long mod = 1e9 + 7 ;

const int MX = (1<<20) ;

long long f[MX] , pw[MX] , sum ;

int main()
{
    int n ;
    scanf("%d",&n) ;
    long long a[n+2] ;
    for(int i = 1 ; i <= n ; ++i)
    {
        scanf("%lld",&a[i]) ;
        ++f[a[i]] ;
    }
    pw[0] = 1 ;
    for(int i = 1 ; i < MX ; ++i)
    {
        pw[i] = (pw[i-1]*2LL)%mod ;
    }
    //SOS DP for Superset
    for(int i = 0 ; i < 20 ; ++i)
    {
        for(int j = 0 ; j < MX ; ++j)
        {
            if(!(j&(1<<i)))
            {
                f[j] = (f[j] + f[j^(1<<i)])%mod ;
            }
        }
    }
    for(int j = 0 ; j < MX ; ++j)
    {
        f[j] = pw[f[j]] ;
    }
    //Reverse SOS DP / Mobius Transform for Superset
    for(int i = 0 ; i < 20 ; ++i)
    {
        for(int j = 0 ; j < MX ; ++j)
        {
            if(!(j&(1<<i)))
            {
                f[j] = (f[j] - f[j^(1<<i)] + mod)%mod ;
            }
        }
    }
    printf("%lld\n",f[0]) ;
    return 0 ;
}
